# what name to expose the postgres service as
serviceName: telemetry-postgres

# deployment will setup service called serviceName to point to either
# the locally deployed postgres or an external postgres instance that
# is specified here:
external:
  enabled: true
  hostname: external-postgres.example.com

replicaCount: 1

# A valid image tag must be provided for the desired postgres version
image:
  repository: registry.suse.com/suse/postgres
  pullPolicy: IfNotPresent
  tag: 16

imagePullSecrets: []

podAnnotations: {}
podLabels: {}

service:
  port: 5432
  type: ClusterIP

resources:
  limits:
    cpu: 500m
    memory: 256Mi
  requests:
    cpu: 500m
    memory: 256Mi

volumes:
- name: telemetry-postgres-db-volume
  persistentVolumeClaim:
    claimName: telemetry-postgres-db-pvc

volumeMounts:
# docker.io/postgres path
#- mountPath: /var/lib/postgresql/data
#  name: telemetry-postgres-db-volume
#  subPath: data

# registry.suse.com/suse/postgres path
- mountPath: /var/lib/pgsql/data
  name: telemetry-postgres-db-volume
  subPath: data

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80

# postgres config settings
postgres:
  user: postgres
  password: telemetry

# backup settings
backup:
  enabled: false
  containerImage: telemetry-postgres:latest
  containerName: postgres-backup
  awsBucket: test-ts-postgres-backup
  # For testing purposes, scheduled to backup every minute, change as needed
  schedule: "* * * * *"

# aws creds
awscredentials:
  accessKeyId: foo
  secretAccessKey: bar

storage:
  # OpenPlatform deployment
  openplatform:
    enabled: false
    pvc:
      storageClass: ebs
      accessMode: ReadWriteOnce
      storageSize: 5Gi

  # local deployment is the fallback if OpenPlatform is not used
  local:
    pvc:
      storageClass: manual
      accessMode: ReadWriteOnce
      storageSize: 5Gi
