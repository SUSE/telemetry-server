apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "chart.fullname" . }}
  labels:
    {{- include "chart.labels" . | nindent 4 }}
  annotations:
    checksum/pre-init-checks: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "chart.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "chart.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: pre-deploy-checks
          image: postgres:16
          command: ["/bin/bash", "/telemetry/pre-deploy-checks.bash"]
          env:
            - name: TELEMETRY_POSTGRES
              value: {{ .Values.telemetry.postgres.host }}
            - name: TELEMETRY_USER
              value: {{ .Values.telemetry.postgres.user }}
            - name: TELEMETRY_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: database-init-config
                  key: TELEMETRY_USER_PASS
          volumeMounts:
            - name: scripts-mnt
              mountPath: /telemetry/pre-deploy-checks.bash
              subPath: pre-deploy-checks
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          startupProbe:
            httpGet:
              path: {{ .Values.telemetry.health.probe.path }}
              port: http
            periodSeconds: {{ .Values.telemetry.health.startup.period }}
            timeoutSeconds: {{ .Values.telemetry.health.startup.timeout }}
            failureThreshold: {{ .Values.telemetry.health.startup.retries }}
          livenessProbe:
            httpGet:
              path: {{ .Values.telemetry.health.probe.path }}
              port: http
            periodSeconds: {{ .Values.telemetry.health.liveness.period }}
            timeoutSeconds: {{ .Values.telemetry.health.liveness.timeout }}
            failureThreshold: {{ .Values.telemetry.health.liveness.retries }}
          readinessProbe:
            httpGet:
              path: {{ .Values.telemetry.health.probe.path }}
              port: http
            periodSeconds: {{ .Values.telemetry.health.readiness.period }}
            timeoutSeconds: {{ .Values.telemetry.health.readiness.timeout }}
            failureThreshold: {{ .Values.telemetry.health.readiness.retries }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
