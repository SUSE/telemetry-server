# docker containers - just server for now, but admin can be
# handled as well if telemetry-admin is added to the end of
# this list
TELEMETRY_CONTAINERS = \
  telemetry-server


# docker container actions
.PHONY: docker-build docker-start docker-run docker-ps docker-status docker-logs docker-stop

# Start the telemetry containers using docker
docker-build: vet
	for cntr in $(TELEMETRY_CONTAINERS); do \
		$(CNTR_MGR) build \
		  --pull \
		  --tag $${cntr} \
		  --target $${cntr} \
		  . \
		  --build-arg logLevel=$(LOG_LEVEL) \
		  --build-arg telemetryCfgDir=/etc/susetelemetry \
		  --build-arg telemetryRepoBranch=$(TELEMETRY_REPO_BRANCH) \
		  --build-arg telemetryImageVariant=$(if $(filter-out main,$(TELEMETRY_REPO_BRANCH)),specified,upstream); \
	done

docker-start docker-run: docker-build
	port=9999; \
	for cntr in $(TELEMETRY_CONTAINERS); do \
		$(CNTR_MGR) run \
			--rm \
			--detach \
			--publish $${port}:$${port} \
			--name $${cntr} $${cntr}; \
		port=$$(expr $${port} - 1); \
	done

docker-ps docker-status:
	$(CNTR_MGR) ps --filter name=\^$$(echo $(TELEMETRY_CONTAINERS) | tr -s ' ' | tr ' ' '|')\$$;

docker-logs:
	for cntr in $(TELEMETRY_CONTAINERS); do \
		$(CNTR_MGR) logs -n 100 $${cntr}; \
	done

docker-stop: docker-status
	-for cntr in $(TELEMETRY_CONTAINERS); do \
		$(CNTR_MGR) stop $${cntr}; \
	done

docker-clean: docker-stop
	$(CNTR_MGR) buildx prune -f --filter="until=24h" && \
	$(CNTR_MGR) image prune -f

clean:: docker-clean
